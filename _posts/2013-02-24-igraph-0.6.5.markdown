---
layout: newstemp
title: igraph 0.6.5
date: February 24, 2013
---

igraph 0.6.5
============

February 24, 2013

The version number is not a mistake, we jump to 0.6.5 from 0.6, 
for technical reasons.

Release Notes
-------------

igraph 0.6.5 is a minor release that contains only few big changes,
and fixes a number of very annoying bugs. 

See at the end for the complete list of changes. First let's see
the most important new features and changes. 

### [R] Vertex shape API in R

It is now possible to create user-defined vertex shapes for drawing 
graphs in R. See <a href="doc-0.6.5/R/igraph.vertex.shapes.html">
    `vertex.shapes()` in the R manual</a>. 

### [R] Convert graphs to data frames in R

Function <a href="doc-0.6.5/R/graph.data.frame.html">`get.data.frame()`</a> 
does the opposite of <a href="doc-0.6.5/R/graph.data.frame.html">
    `graph.data.frame()`</a>, it converts a graph to one or two data frames
that contain vertex and/or edge data.

### [PY] Convert lists of tuples to graphs in Python

The <a href="doc-0.6.5/python/igraph.Graph-class.html#TupleList">`Graph.TupleList()`</a>
static method in Python now allows easy conversion of lists of tuples (such as
database records or contents of CSV files) into graphs with named vertices and
edge attributes.


### [C][R][PY] Pajek reader supports bipartite graphs

See more in the <a href="doc-0.6.5/R/read.graph.html">R manual</a>, 
<a href="doc-0.6.5/python/igraph.Graph-class.html#Read">
  Python documentation</a> or 
<a href="doc-0.6.5/html/ch19s05.html#igraph_read_graph_pajek">C
  reference</a>.

### [C][R][PY] Graphical degree sequences

We added some new functions if a sequence of integers is graphial, i.e. it 
can be the degree sequence of a simple graph. See more in
the <a href="doc-0.6.5/R/is.degree.sequence.html">R manual</a>
<a href="doc-0.6.5/python/igraph._igraph-module.html#is_graphical_degree_sequence">Python documentation</a>
or in the 
<a href="doc-0.6.5/html/ch13s05.html#igraph_is_graphical_degree_sequence"> 
  C reference</a>.

### [C][R][PY] k-regular random graphs

It is possible now to generate regular random graphs, faster than 
the general degree sequence based generator. See more in
the <a href="doc-0.6.5/R/k.regular.game.html">R manual</a>,
<a href="doc-0.6.5/python/igraph.GraphBase-class.html#K_Regular">Python documentation</a>
or the <a href="doc-0.6.5/html/ch09s02.html#igraph_k_regular_game">
    C reference</a>.

### [C][R][PY] Fitting power law distributions

This release includes the plfit library to maximum likelihood fit 
power laws to discrete or contiouous data. See more in
the <a href="doc-0.6.5/R/power.law.fit.html">R manual</a>,
<a href="doc-0.6.5/python/igraph.statistics-module.html#power_law_fit">Python documentation</a>
or the <a href="doc-0.6.5/html/ch29s05.html#igraph_power_law_fit">
C reference</a>.

### [R] Speedup in R

Many basic graph operations (eg. printing the summary to the screen,
querying attribute values) now avoid copying the graph, so these
operations are now much faster in R.


R: new features and bug fixes
-----------------------------

- Added a vertex shape API for defining new vertex shapes, and also 
  a couple of new vertex shapes.
- Added the `get.data.frame()` function, opposite of `graph.data.frame()`.
- Added bipartite support to the Pajek reader and writer, closes bug
  \#1042298.
- `degree.sequence.game()` has a new method now: `simple_no_multiple`.
- Added the `is.degree.sequence()` and `is.graphical.degree.sequence()`
  functions.
- `rewire()` has a new method: `loops`, that can create loop edges.
- Walktrap community detection now handles isolates.
- `layout.mds()` returns a layout matrix now.
- `layout.mds()` uses LAPACK instead of ARPACK.
- Handle the `~` character in write.graph and read.graph. Bug
  \#1066986.
- Added `k.regular.game()`.
- Use vertex names to plot if no labels are specified in the function
  call or as vetex attributes. Fixes issue \#1085431.
- `power.law.fit()` can now use a C implementation.

- Fixed a bug in `barabasi.game()` when `out.seq` was an empty vector.
- Fixed a bug that made functions with a progress bar fail if called 
  from another package.
- Fixed a bug when creating graphs from a weighted integer adjacency 
  matrix via `graph.adjacency()`. Bug \#1019624.
- Fixed overflow issues in centralization calculations.
- Fixed a `minimal.st.separators()` bug, some vertex sets were incorrectly
  reported as separators. Bug \#1033045.
- Fixed a bug that mishandled vertex colors in VF2 isomorphism
  functions. Bug `\#1032819`.
- Pajek exporter now always quotes strings, thanks to Elena Tea Russo.
- Fixed a bug with handling small edge weights in shortest paths 
  calculation in `shortest.paths()` (Dijkstra's algorithm.) Thanks to 
  Martin J Reed.
- Weighted transitivity uses `V(graph)` as `vids` if it is `NULL`.
- Fixed a bug when `pie` vertices were drawn together with other 
  vertex shapes.
- Speed up printing graphs.
- Speed up attribute queries and other basic operations, by avoiding 
  copying of the graph. Bug \#1043616.
- Fixed a bug in the NCV setting for ARPACK functions. It cannot be
  bigger than the matrix size.
- `layout.merge()`s DLA mode has better defaults now.
- Fixed a bug in `layout.mds()` that resulted vertices on top of each
  other.
- Fixed a bug in `layout.spring()`, it was not working properly.
- Fixed `layout.svd()`, which was completely defunct.
- Fixed a bug in `layout.graphopt()` that caused warnings and on 
  some platforms crashes.
- Fixed `community.to.membership()`. Bug \#1022850.
- Fixed a `graph.incidence()` crash if it was called with a non-matrix
  argument.
- Fixed a `get.shortest.paths()` bug, when output was set to `both`.
- Motif finding functions return `NA` for isomorphism classes that are
  not motifs (i.e. not connected). Fixes bug \#1050859. 
- Fixed `get.adjacency()` when attr is given, and the attribute has some
  complex type. Bug \#1025799. 
- Fixed attribute name in `graph.adjacency()` for dense matrices. Bug
  \#1066952. 
- Fixed erratic behavior of `alpha.centrality()`.
- Fixed igraph indexing, when attr is given. Bug \#1073705.
- Fixed a bug when calculating the largest cliques of a directed
  graph. Bug \#1073800.
- Fixed a bug in the maximal clique search, closes \#1074402.
- Warn for negative weights when calculating PageRank.
- Fixed dense, unweighted graph.adjacency when `diag=FALSE`. Closes
  issue \#1077425. 
- Fixed a bug in `eccentricity()` and `radius()`, the results were often
  simply wrong.
- Fixed a bug in `get.all.shortest.paths()` when some edges had zero weight.
- `graph.data.frame()` is more careful when vertex names are numbers, to
  avoid their scientific notation. Fixes issue \#1082221. 
- Better check for `NA`s in vertex names. Fixes issue \#1087215
- Fixed some potential crashes in the DrL layout generator.
- Fixed a bug in the Reingold-Tilford layout when the graph is
  directed and `mode != ALL`.
- Eliminate gap between vertex and edge when plotting an edge without an arrow.
  Fixes \#1118448.
- Fixed a bug in `has.multiple()` that resulted in false negatives for
  some undirected graphs.
- Fixed a crash in weighted betweenness calculation.
- R plotting: fixed a bug that caused misplaced arrows at rectangle
  vertex shapes.

Python news and fixes
---------------------

- Added bipartite support to the Pajek reader and writer, closes bug
  \#1042298.
- `Graph.Degree_Sequence()` has a new method now: `no_multiple`.
- Added the `is_degree_sequence()` and `is_graphical_degree_sequence()`
  functions.
- `rewire()` has a new mode: `loops`, that can create loop edges.
- Walktrap community detection now handles isolates.
- Added `Graph.K_Regular()`.
- `power_law_fit()` now uses a C implementation.
- Added support for setting the frame (stroke) width of vertices using the
  `frame_width` attribute or the `vertex_frame_width` keyword argument
  in `plot()`
- Improved Inkscape-friendly SVG output from `Graph.write_svg()`,
  thanks to drlog
- Better handling of named vertices in `Graph.delete_vertices()`
- Added experimental Gephi graph streaming support; see
  `igraph.remote.gephi` and `igraph.drawing.graph.GephiGraphStreamingDrawer`
- Nicer `__repr__` output for `Flow` and `Cut` instances
- Arrows are now placed correctly around diamond-shaped nodes on plots
- Added `Graph.TupleList`, a function that allows one to create graphs with
  edge attributes quickly from a list of tuples.
- `plot()` now also supports `.eps` as an extension, not only `.ps`

- Fixed overflow issues in centralization calculations.
- Fixed a bug that mishandled vertex colors in VF2 isomorphism
  functions. Bug \#1032819.
- Pajek exporter now always quotes strings, thanks to Elena Tea Russo.
- Fixed a bug with handling small edge weights in shortest paths 
  calculation in `Graph.shortest_paths()` (Dijkstra's algorithm.) Thanks to 
  Martin J Reed.
- Fixed a bug in the `NCV` setting for ARPACK functions. It cannot be
  bigger than the matrix size.
- Fixed a bug in `Graph.layout_mds()` that resulted vertices on top of each
  other.
- Motif finding functions return nan for isomorphism classes that are
  not motifs (i.e. not connected). Fixes bug \#1050859. 
- Fixed a bug when calculating the largest cliques of a directed
  graph. Bug \#1073800.
- Warn for negative weights when calculating PageRank.
- Fixed a bug in `Graph.eccentricity()` and `Graph.radius()`,
  the results were often simply wrong.
- Fixed a bug in `Graph.get.all.shortest.paths()` when some edges
  had zero weight.
- Fixed some potential crashes in the DrL layout generator.
- Fixed a bug in the Reingold-Tilford layout when the graph is
  directed and `mode != ALL`.
- Fixed a bug in `Graph.layout_sugiyama()` when the graph had no edges.
- Fixed a bug in `Graph.community_label_propagation()` when initial labels
  contained -1 entries. Issue \#1105460.
- Repaired the `DescartesCoordinateSystem` class (which is not used
  too frequently anyway)
- Fixed a bug that caused segfaults when an igraph `Graph` was used in a
  thread forked from the main Python interpreter thread
- Fixed a bug that affected file handles created from Python strings in the
  C layer
- Fixed a bug in `has_multiple()` that resulted in false negatives
  for some undirected graphs.
- Fixed a crash in weighted betweenness calculation.

C library news and changes
--------------------------

- Added bipartite support to the Pajek reader and writer, closes bug
  \#1042298.
- `igraph_layout_mds()` uses LAPACK instead of ARPACK.
- `igraph_degree_sequence_game` has a new method:
  `IGRAPH_DEGSEQ_SIMPLE_NO_MULTIPLE`.
- Added the `igraph_is_degree_sequence()` and
  `igraph_is_graphical_degree_sequence()` functions.
- `igraph_rewire()` has a new method: `IGRAPH_REWIRING_SIMPLE_LOOPS`, 
  that can create loops.
- Walktrap community detection now handles isolates.
- Added `igraph_k_regular_game()`.
- Added `igraph_power_law_fit`.

- Fixed a bug in `igraph_barabasi_game` when `outseq` was an empty vector.
- Fixed overflow issues in centralization calculations.
- Fixed an invalid return value of `igraph_vector_ptr_pop_back`.
- Fixed a `igraph_all_minimal_st_separators()` bug, some vertex sets
  were incorrectly reported as separators. Bug \#1033045.
- Pajek exporter now always quotes strings, thanks to Elena Tea Russo.
- Fixed a bug with handling small edge weights in
  `igraph_shortest_paths_dijkstra()`, thanks to Martin J Reed.
- Fixed a bug in the `NCV` setting for ARPACK functions. It cannot be
  bigger than the matrix size.
- `igraph_layout_merge_dla` uses better default parameter values now.
- Fixed a bug in `igraph_layout_mds()` that resulted vertices on top of
  each other.
- Attribute handler table is not thread-local any more.
- Motif finding functions return `IGRAPH_NAN` for isomorphism classes
  that are not motifs (i.e. not connected). Fixes bug \#1050859.
- Fixed a bug when calculating the largest cliques of a directed
  graph. Bug \#1073800.
- Fix a bug in `degree_sequence_game()`, in_seq can be an empty vector as
  well instead of NULL, for an undirected graph. 
- Fixed a bug in the maximal clique search, closes \#1074402.
- Warn for negative weights when calculating PageRank.
- Fixed a bug in `igraph_eccentricity()` (and also `igraph_radius()`),
  the results were often simply wrong.
- Fixed a bug in `igraph_get_all_shortest_paths_dijkstra()` when edges
  had zero weight.
- Fixed some potential crashes in the DrL layout generator.
- Fixed a bug in the Reingold-Tilford layout when the graph is
  directed and `mode != ALL`.
- Fixed a bug in `igraph_has_multiple()` that resulted in false negatives
  for some undirected graphs.
- Fixed a crash in weighted betweenness calculation.
