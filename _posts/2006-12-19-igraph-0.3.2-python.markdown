---
layout: pynewstemp
title: igraph 0.3.2
date: December 19, 2006
category: python
---

igraph 0.3.2
============

December 19, 2006

This is a new major release, it contains many new things:
geometric random graphs, local transitivity, etc.

<!--more-->

Changes in the C library
------------------------

- `igraph_maxdegree` added, calculates the maximum degree in the graph
- `igraph_grg_game`, geometric random graphs
- `igraph_density`, graph density calculation
- push-relabel maximum flow algorithm added, `igraph_maxflow_value`
- minimum cut functions added based on maximum flow:
  `igraph_st_mincut_value`, `igraph_mincut_value`, the Stoer-Wagner
  algorithm is implemented for undirected graphs
- vertex connectivity functions, usually based on maximum flow:
  `igraph_st_vertex_connectivity`, `igraph_vertex_connectivity`
- edge connectivity functions, usually based on maximum flow:
  `igraph_st_edge_connectivity`, `igraph_edge_connectivity`
- other functions based on maximum flow: `igraph_edge_disjoint_paths`,
  `igraph_vertex_disjoint_paths`, `igraph_adhesion`, `igraph_cohesion`
- dimacs file format added
- `igraph_to_directed` handles attributes
- igraph_constraint calculation corrected, it handles weighted graphs
- spinglass-based community structure detection, the Joerg Reichardt --
  Stefan Bornholdt algorithm added: `igraph_spinglass_community`,
  `igraph_spinglass_my_community`
- `igraph_extended_chordal_ring`, it creates extended chordal rings
- `no` argument added to `igraph_clusters`, it is possible to calculate
  the number of clusters without calculating the clusters themselves
- minimum spanning tree functions keep attributes now and also the 
  direction of the edges is kept in directed graphs
- there are separate functions to calculate different types of
  transitivity now
- `igraph_delete_vertices` rewritten to allocate less memory for the new
  graph 
- neighborhood related functions added: `igraph_neighborhood`,
  `igraph_neighborhood_size`, `igraph_neighborhood_graphs`
- two new games added based on different node types:
  `igraph_preference_game` and `igraph_asymmetric_preference_game`
- Laplacian of a graph can be calculated by the `igraph_laplacian` function

Bugs corrected
--------------

- attribute handling bug when deleting edges corrected
- GraphML escaping and NaN handling corrected
- a bug in Erdos-Renyi graph generation corrected: it had problems 
  with generating large directed graphs
- bug in constraint calculation corrected, it works well now
- fixed memory leaks in `igraph_read_graph_graphml`
- error handling bug corrected in `igraph_read_graph_graphml`
- bug corrected in R version of `graph.laplacian` when normalized
  Laplacian is requested
- memory leak corrected in `get.all.shortest.paths` in the R package
